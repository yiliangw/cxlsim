From 2642da619e5c7253c4fe4fe3af3360e72fe174e1 Mon Sep 17 00:00:00 2001
From: Jonas Kaufmann <jokau03@gmail.com>
Date: Tue, 27 Aug 2024 21:55:32 +0200
Subject: [PATCH] configs/simbricks: run KVM cores in parallel

When multiple cores are simulated in the same thread under KVM, simulation speed becomes really slow to the point where not using KVM is actually faster. We now use the parallel event queue feature to run all cores in separate threads under KVM.
---
 configs/simbricks/simbricks.py | 26 ++++++++++++++++++--------
 1 file changed, 18 insertions(+), 8 deletions(-)

diff --git a/configs/simbricks/simbricks.py b/configs/simbricks/simbricks.py
index 3ebb79855d..dc7f9a676f 100644
--- a/configs/simbricks/simbricks.py
+++ b/configs/simbricks/simbricks.py
@@ -470,14 +470,6 @@ def build_system(np):
         for i in range(np)
     ]
 
-    if ObjectList.is_kvm_cpu(TestCPUClass) or ObjectList.is_kvm_cpu(
-        FutureClass
-    ):
-        sys.kvm_vm = KvmVM()
-        # disable relying on performance counters for kvm cpu
-        for cpu in sys.cpu:
-            cpu.usePerf = False
-
     CacheConfig.config_cache(args, sys)
     # if args.caches and args.l3cache and args.ddio_enabled:
     #     # By default the IOCache runs at the system clock
@@ -561,6 +553,20 @@ def build_system(np):
 
     MemConfig.config_mem(args, sys)
 
+    if ObjectList.is_kvm_cpu(TestCPUClass
+                            ) or ObjectList.is_kvm_cpu(FutureClass):
+        for i, cpu in enumerate(sys.cpu):
+            # Disable relying on performance counters for kvm cpu
+            cpu.usePerf = False
+            # Child objects usually inherit the parent's event queue. Override
+            # that and use the same event queue for all devices.
+            for obj in cpu.descendants():
+                obj.eventq_index = 0
+            cpu.eventq_index = i + 1
+        # Make all SimBricks devices still live in the main event queue
+        sys.pc.eventq_index = 0
+        sys.kvm_vm = KvmVM()
+
     return sys
 
 
@@ -625,6 +631,10 @@ def build_system(np):
 np = args.num_cpus
 sys = build_system(np)
 root = Root(full_system=True, system=sys)
+# Required for running kvm on multiple host cores. Uses gem5's parallel event
+# queue feature.
+if ObjectList.is_kvm_cpu(TestCPUClass) or ObjectList.is_kvm_cpu(FutureClass):
+    root.sim_quantum = int(1e8)  # 100 us
 
 if args.timesync:
     root.time_sync_enable = True
